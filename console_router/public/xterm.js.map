{"version":3,"file":"xterm.js","mappings":"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","sources":["webpack://@xterm/xterm/webpack/universalModuleDefinition","webpack://@xterm/xterm/./src/browser/AccessibilityManager.ts","webpack://@xterm/xterm/./src/browser/Clipboard.ts","webpack://@xterm/xterm/./src/browser/ColorContrastCache.ts","webpack://@xterm/xterm/./src/browser/Lifecycle.ts","webpack://@xterm/xterm/./src/browser/Linkifier.ts","webpack://@xterm/xterm/./src/browser/LocalizableStrings.ts","webpack://@xterm/xterm/./src/browser/OscLinkProvider.ts","webpack://@xterm/xterm/./src/browser/RenderDebouncer.ts","webpack://@xterm/xterm/./src/browser/Terminal.ts","webpack://@xterm/xterm/./src/browser/TimeBasedDebouncer.ts","webpack://@xterm/xterm/./src/browser/Viewport.ts","webpack://@xterm/xterm/./src/browser/decorations/BufferDecorationRenderer.ts","webpack://@xterm/xterm/./src/browser/decorations/ColorZoneStore.ts","webpack://@xterm/xterm/./src/browser/decorations/OverviewRulerRenderer.ts","webpack://@xterm/xterm/./src/browser/input/CompositionHelper.ts","webpack://@xterm/xterm/./src/browser/input/Mouse.ts","webpack://@xterm/xterm/./src/browser/input/MoveToCell.ts","webpack://@xterm/xterm/./src/browser/renderer/dom/DomRenderer.ts","webpack://@xterm/xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts","webpack://@xterm/xterm/./src/browser/renderer/dom/WidthCache.ts","webpack://@xterm/xterm/./src/browser/renderer/shared/Constants.ts","webpack://@xterm/xterm/./src/browser/renderer/shared/RendererUtils.ts","webpack://@xterm/xterm/./src/browser/renderer/shared/SelectionRenderModel.ts","webpack://@xterm/xterm/./src/browser/selection/SelectionModel.ts","webpack://@xterm/xterm/./src/browser/services/CharSizeService.ts","webpack://@xterm/xterm/./src/browser/services/CharacterJoinerService.ts","webpack://@xterm/xterm/./src/browser/services/CoreBrowserService.ts","webpack://@xterm/xterm/./src/browser/services/LinkProviderService.ts","webpack://@xterm/xterm/./src/browser/services/MouseService.ts","webpack://@xterm/xterm/./src/browser/services/RenderService.ts","webpack://@xterm/xterm/./src/browser/services/SelectionService.ts","webpack://@xterm/xterm/./src/browser/services/Services.ts","webpack://@xterm/xterm/./src/browser/services/ThemeService.ts","webpack://@xterm/xterm/./src/common/CircularList.ts","webpack://@xterm/xterm/./src/common/Clone.ts","webpack://@xterm/xterm/./src/common/Color.ts","webpack://@xterm/xterm/./src/common/CoreTerminal.ts","webpack://@xterm/xterm/./src/common/EventEmitter.ts","webpack://@xterm/xterm/./src/common/InputHandler.ts","webpack://@xterm/xterm/./src/common/Lifecycle.ts","webpack://@xterm/xterm/./src/common/MultiKeyMap.ts","webpack://@xterm/xterm/./src/common/Platform.ts","webpack://@xterm/xterm/./src/common/SortedList.ts","webpack://@xterm/xterm/./src/common/TaskQueue.ts","webpack://@xterm/xterm/./src/common/WindowsMode.ts","webpack://@xterm/xterm/./src/common/buffer/AttributeData.ts","webpack://@xterm/xterm/./src/common/buffer/Buffer.ts","webpack://@xterm/xterm/./src/common/buffer/BufferLine.ts","webpack://@xterm/xterm/./src/common/buffer/BufferRange.ts","webpack://@xterm/xterm/./src/common/buffer/BufferReflow.ts","webpack://@xterm/xterm/./src/common/buffer/BufferSet.ts","webpack://@xterm/xterm/./src/common/buffer/CellData.ts","webpack://@xterm/xterm/./src/common/buffer/Constants.ts","webpack://@xterm/xterm/./src/common/buffer/Marker.ts","webpack://@xterm/xterm/./src/common/data/Charsets.ts","webpack://@xterm/xterm/./src/common/data/EscapeSequences.ts","webpack://@xterm/xterm/./src/common/input/Keyboard.ts","webpack://@xterm/xterm/./src/common/input/TextDecoder.ts","webpack://@xterm/xterm/./src/common/input/UnicodeV6.ts","webpack://@xterm/xterm/./src/common/input/WriteBuffer.ts","webpack://@xterm/xterm/./src/common/input/XParseColor.ts","webpack://@xterm/xterm/./src/common/parser/Constants.ts","webpack://@xterm/xterm/./src/common/parser/DcsParser.ts","webpack://@xterm/xterm/./src/common/parser/EscapeSequenceParser.ts","webpack://@xterm/xterm/./src/common/parser/OscParser.ts","webpack://@xterm/xterm/./src/common/parser/Params.ts","webpack://@xterm/xterm/./src/common/public/AddonManager.ts","webpack://@xterm/xterm/./src/common/public/BufferApiView.ts","webpack://@xterm/xterm/./src/common/public/BufferLineApiView.ts","webpack://@xterm/xterm/./src/common/public/BufferNamespaceApi.ts","webpack://@xterm/xterm/./src/common/public/ParserApi.ts","webpack://@xterm/xterm/./src/common/public/UnicodeApi.ts","webpack://@xterm/xterm/./src/common/services/BufferService.ts","webpack://@xterm/xterm/./src/common/services/CharsetService.ts","webpack://@xterm/xterm/./src/common/services/CoreMouseService.ts","webpack://@xterm/xterm/./src/common/services/CoreService.ts","webpack://@xterm/xterm/./src/common/services/DecorationService.ts","webpack://@xterm/xterm/./src/common/services/InstantiationService.ts","webpack://@xterm/xterm/./src/common/services/LogService.ts","webpack://@xterm/xterm/./src/common/services/OptionsService.ts","webpack://@xterm/xterm/./src/common/services/OscLinkService.ts","webpack://@xterm/xterm/./src/common/services/ServiceRegistry.ts","webpack://@xterm/xterm/./src/common/services/Services.ts","webpack://@xterm/xterm/./src/common/services/UnicodeService.ts","webpack://@xterm/xterm/webpack/bootstrap","webpack://@xterm/xterm/./src/browser/public/Terminal.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(globalThis, () => {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IInstantiationService } from 'common/services/Services';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\n// Turn this on to unhide the accessibility tree and display it under\n// (instead of overlapping with) the terminal.\nconst DEBUG = false;\n\nexport class AccessibilityManager extends Disposable {\n  private _debugRootContainer: HTMLElement | undefined;\n  private _accessibilityContainer: HTMLElement;\n\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _rowColumns: WeakMap<HTMLElement, number[]> = new WeakMap();\n\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n  private _liveRegionDebouncer: IRenderDebouncer;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._accessibilityContainer.classList.add('xterm-accessibility');\n\n    this._rowContainer = this._coreBrowserService.mainDocument.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityContainer.appendChild(this._rowContainer);\n\n    this._liveRegion = this._coreBrowserService.mainDocument.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityContainer.appendChild(this._liveRegion);\n    this._liveRegionDebouncer = this.register(new TimeBasedDebouncer(this._renderRows.bind(this)));\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n\n    if (DEBUG) {\n      this._accessibilityContainer.classList.add('debug');\n      this._rowContainer.classList.add('debug');\n\n      // Use a `<div class=\"xterm\">` container so that the css will still apply.\n      this._debugRootContainer = document.createElement('div');\n      this._debugRootContainer.classList.add('xterm');\n\n      this._debugRootContainer.appendChild(document.createTextNode('------start a11y------'));\n      this._debugRootContainer.appendChild(this._accessibilityContainer);\n      this._debugRootContainer.appendChild(document.createTextNode('------end a11y------'));\n\n      this._terminal.element.insertAdjacentElement('afterend', this._debugRootContainer);\n    } else {\n      this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityContainer);\n    }\n\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n    this.register(addDisposableDomListener(document, 'selectionchange', () => this._handleSelectionChange()));\n    this.register(this._coreBrowserService.onDprChange(() => this._refreshRowsDimensions()));\n\n    this._refreshRows();\n    this.register(toDisposable(() => {\n      if (DEBUG) {\n        this._debugRootContainer!.remove();\n      } else {\n        this._accessibilityContainer.remove();\n      }\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._liveRegionDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const line = buffer.lines.get(buffer.ydisp + i);\n      const columns: number[] = [];\n      const lineData = line?.translateToString(true, undefined, undefined, columns) || '';\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n          this._rowColumns.set(element, [0, 1]);\n        } else {\n          element.textContent = lineData;\n          this._rowColumns.set(element, columns);\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleSelectionChange(): void {\n    if (this._rowElements.length === 0) {\n      return;\n    }\n\n    const selection = document.getSelection();\n    if (!selection) {\n      return;\n    }\n\n    if (selection.isCollapsed) {\n      // Only do something when the anchorNode is inside the row container. This\n      // behavior mirrors what we do with mouse --- if the mouse clicks\n      // somewhere outside of the terminal, we don't clear the selection.\n      if (this._rowContainer.contains(selection.anchorNode)) {\n        this._terminal.clearSelection();\n      }\n      return;\n    }\n\n    if (!selection.anchorNode || !selection.focusNode) {\n      console.error('anchorNode and/or focusNode are null');\n      return;\n    }\n\n    // Sort the two selection points in document order.\n    let begin = { node: selection.anchorNode, offset: selection.anchorOffset };\n    let end = { node: selection.focusNode, offset: selection.focusOffset };\n    if ((begin.node.compareDocumentPosition(end.node) & Node.DOCUMENT_POSITION_PRECEDING) || (begin.node === end.node && begin.offset > end.offset) ) {\n      [begin, end] = [end, begin];\n    }\n\n    // Clamp begin/end to the inside of the row container.\n    if (begin.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING)) {\n      begin = { node: this._rowElements[0].childNodes[0], offset: 0 };\n    }\n    if (!this._rowContainer.contains(begin.node)) {\n      // This happens when `begin` is below the last row.\n      return;\n    }\n    const lastRowElement = this._rowElements.slice(-1)[0];\n    if (end.node.compareDocumentPosition(lastRowElement) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING)) {\n      end = {\n        node: lastRowElement,\n        offset: lastRowElement.textContent?.length ?? 0\n      };\n    }\n    if (!this._rowContainer.contains(end.node)) {\n      // This happens when `end` is above the first row.\n      return;\n    }\n\n    const toRowColumn = ({ node, offset }: typeof begin): {row: number, column: number} | null => {\n      // `node` is either the row element or the Text node inside it.\n      const rowElement: any = node instanceof Text ? node.parentNode : node;\n      let row = parseInt(rowElement?.getAttribute('aria-posinset'), 10) - 1;\n      if (isNaN(row)) {\n        console.warn('row is invalid. Race condition?');\n        return null;\n      }\n\n      const columns = this._rowColumns.get(rowElement);\n      if (!columns) {\n        console.warn('columns is null. Race condition?');\n        return null;\n      }\n\n      let column = offset < columns.length ? columns[offset] : columns.slice(-1)[0] + 1;\n      if (column >= this._terminal.cols) {\n        ++row;\n        column = 0;\n      }\n      return {\n        row,\n        column\n      };\n    };\n\n    const beginRowColumn = toRowColumn(begin);\n    const endRowColumn = toRowColumn(end);\n\n    if (!beginRowColumn || !endRowColumn) {\n      return;\n    }\n\n    if (beginRowColumn.row > endRowColumn.row || (beginRowColumn.row === endRowColumn.row && beginRowColumn.column >= endRowColumn.column)) {\n      // This should not happen unless we have some bugs.\n      throw new Error('invalid range');\n    }\n\n    this._terminal.select(\n      beginRowColumn.column,\n      beginRowColumn.row,\n      (endRowColumn.row - beginRowColumn.row) * this._terminal.cols - beginRowColumn.column + endRowColumn.column\n    );\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService, optionsService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService, optionsService: IOptionsService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode && optionsService.rawOptions.ignoreBracketedPasteMode !== true);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IBufferCellPosition, ILink, ILinkDecorations, ILinkWithState, ILinkifier2, ILinkifierEvent } from 'browser/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, disposeArray, getDisposeArrayDisposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { IBufferService } from 'common/services/Services';\nimport { ILinkProviderService, IMouseService, IRenderService } from './services/Services';\n\nexport class Linkifier extends Disposable implements ILinkifier2 {\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _wasResized: boolean = false;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILinkProviderService private readonly _linkProviderService: ILinkProviderService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n      // Clear out link providers as they could easily cause an embedder memory leak\n      this._activeProviderReplies?.clear();\n    }));\n    // Listen to resize to catch the case where it's resized and the cursor is out of the viewport.\n    this.register(this._bufferService.onResize(() => {\n      this._clearCurrentLink();\n      this._wasResized = true;\n    }));\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine\n    //       should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y || this._wasResized) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      this._wasResized = false;\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviderService.linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._lastMouseEvent) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Listen to viewport changes to re-render the link under the cursor (only when the line the\n      // link is on changes)\n      this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n        // Sanity check, this shouldn't happen in practice as this listener would be disposed\n        if (!this._currentLink) {\n          return;\n        }\n        // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n        // cleared.\n        const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n        const end = this._bufferService.buffer.ydisp + 1 + e.end;\n        // Only clear the link if the viewport change happened on this line\n        if (this._currentLink.link.range.start.y >= start && this._currentLink.link.range.end.y <= end) {\n          this._clearCurrentLink(start, end);\n          if (this._lastMouseEvent) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }\n      }));\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink } from 'browser/Types';\nimport { ILinkProvider } from 'browser/services/Services';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same\n    //       id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { copyHandler, handlePasteEvent, moveTextAreaUnderMouseCursor, paste, rightClickHandler } from 'browser/Clipboard';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Linkifier } from './Linkifier';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { CharacterJoinerHandler, CustomKeyEventHandler, CustomWheelEventHandler, IBrowser, IBufferRange, ICompositionHelper, ILinkifier2, ITerminal, IViewport } from 'browser/Types';\nimport { Viewport } from 'browser/Viewport';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { MouseService } from 'browser/services/MouseService';\nimport { RenderService } from 'browser/services/RenderService';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport { ICharSizeService, ICharacterJoinerService, ICoreBrowserService, ILinkProviderService, IMouseService, IRenderService, ISelectionService, IThemeService } from 'browser/services/Services';\nimport { ThemeService } from 'browser/services/ThemeService';\nimport { channels, color } from 'common/Color';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { ColorRequestType, CoreMouseAction, CoreMouseButton, CoreMouseEventType, IColorEvent, ITerminalOptions, KeyboardResultType, ScrollSource, SpecialColorIndex } from 'common/Types';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { IBuffer } from 'common/buffer/Types';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { IDecoration, IDecorationOptions, IDisposable, ILinkProvider, IMarker } from '@xterm/xterm';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { LinkProviderService } from 'browser/services/LinkProviderService';\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  public linkifier: ILinkifier2 | undefined;\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n  private _customWheelEventHandler: CustomWheelEventHandler | undefined;\n\n  // Browser services\n  private _decorationService: DecorationService;\n  private _linkProviderService: ILinkProviderService;\n\n  // Optional browser services\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: MutableDisposable<AccessibilityManager> = this.register(new MutableDisposable());\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n    this._linkProviderService = this._instantiationService.createInstance(LinkProviderService);\n    this._instantiationService.setService(ILinkProviderService, this._linkProviderService);\n    this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case SpecialColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case SpecialColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case SpecialColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const colorRgb = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(colorRgb)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = channels.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = channels.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager.value && this._renderService) {\n        this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n      }\n    } else {\n      this._accessibilityManager.clear();\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: FocusEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService, this.optionsService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    // If the terminal is already opened\n    if (this.element?.ownerDocument.defaultView && this._coreBrowserService) {\n      // Adjust the window if needed\n      if (this.element.ownerDocument.defaultView !== this._coreBrowserService.window) {\n        this._coreBrowserService.window = this.element.ownerDocument.defaultView;\n      }\n      return;\n    }\n\n    this._document = parent.ownerDocument;\n    if (this.options.documentOverride && this.options.documentOverride instanceof Document) {\n      this._document = this.optionsService.rawOptions.documentOverride as Document;\n    }\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = this._document.createDocumentFragment();\n    this._viewportElement = this._document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = this._document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = this._document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    this.register(addDisposableDomListener(this.screenElement, 'mousemove', (ev: MouseEvent) => this.updateCursorStyle(ev)));\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = this._document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = this._document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this.register(this._instantiationService.createInstance(CoreBrowserService,\n      this.textarea,\n      parent.ownerDocument.defaultView ?? window,\n      // Force unsafe null in node.js environment for tests\n      this._document ?? (typeof window !== 'undefined') ? window.document : null as any\n    ));\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: FocusEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = this._document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.linkifier = this.register(this._instantiationService.createInstance(Linkifier, this.screenElement));\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this.viewport = this._instantiationService.createInstance(Viewport, this._viewportElement, this._viewportScrollArea);\n    this.viewport.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent, ScrollSource.VIEWPORT)),\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager.value = this._instantiationService.createInstance(AccessibilityManager, this);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this, this._document!, this.element!, this.screenElement!, this._viewportElement!, this._helperContainer!, this.linkifier!);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          if (self._customWheelEventHandler && self._customWheelEventHandler(ev as WheelEvent) === false) {\n            return false;\n          }\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (this._customWheelEventHandler && this._customWheelEventHandler(ev) === false) {\n        return false;\n      }\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent | MouseEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    if (source === ScrollSource.VIEWPORT) {\n      super.scrollLines(disp, suppressScrollEvent, source);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.viewport?.scrollLines(disp);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService, this.optionsService);\n  }\n\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public attachCustomWheelEventHandler(customWheelEventHandler: CustomWheelEventHandler): void {\n    this._customWheelEventHandler = customWheelEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._linkProviderService.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public registerMarker(cursorYOffset: number): IMarker {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    // IMPORTANT: Fire scroll event before viewport is reset. This ensures embedders get the clear\n    // scroll event and that the viewport's state will be valid for immediate writes.\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n    this.viewport?.reset();\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n    this.viewport?.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<{ amount: number, suppressScrollEvent: boolean }>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that\n    // case, therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea());\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  public reset(): void {\n    this._currentRowHeight = 0;\n    this._currentDeviceCellHeight = 0;\n    this._lastRecordedBufferLength = 0;\n    this._lastRecordedViewportHeight = 0;\n    this._lastRecordedBufferHeight = 0;\n    this._lastTouchY = 0;\n    this._lastScrollTop = 0;\n    // Sync on next animation frame to ensure the new terminal state is used\n    this._coreBrowserService.window.requestAnimationFrame(() => this.syncScrollArea());\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderDimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._onRequestScrollLines.fire({ amount: 0, suppressScrollEvent: true });\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._onRequestScrollLines.fire({ amount: diff, suppressScrollEvent: true });\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  public scrollLines(disp: number): void {\n    if (disp === 0) {\n      return;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._onRequestScrollLines.fire({ amount: disp, suppressScrollEvent: false });\n    } else {\n      const amount = disp * this._currentRowHeight;\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        this._smoothScrollState.target = this._smoothScrollState.origin + amount;\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n\n  public getBufferElements(startLine: number, endLine?: number): { bufferElements: HTMLElement[], cursorElement?: HTMLElement } {\n    let currentLine: string = '';\n    let cursorElement: HTMLElement | undefined;\n    const bufferElements: HTMLElement[] = [];\n    const end = endLine ?? this._bufferService.buffer.lines.length;\n    const lines = this._bufferService.buffer.lines;\n    for (let i = startLine; i < end; i++) {\n      const line = lines.get(i);\n      if (!line) {\n        continue;\n      }\n      const isWrapped = lines.get(i + 1)?.isWrapped;\n      currentLine += line.translateToString(!isWrapped);\n      if (!isWrapped || i === lines.length - 1) {\n        const div = document.createElement('div');\n        div.textContent = currentLine;\n        bufferElements.push(div);\n        if (currentLine.length > 0) {\n          cursorElement = div;\n        }\n        currentLine = '';\n      }\n    }\n    return { bufferElements, cursorElement };\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = this._coreBrowserService.mainDocument.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.classList.toggle('xterm-decoration-top-layer', decoration?.options?.layer === 'top');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n        decoration.onDispose(() => {\n          this._decorationElements.delete(decoration);\n          element!.remove();\n        });\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = this._coreBrowserService.mainDocument.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(this._coreBrowserService.onDprChange(() => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowserService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowserService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowserService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DomRendererRowFactory, RowCss } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { createSelectionRenderModel } from 'browser/renderer/shared/SelectionRenderModel';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent, ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ITerminal, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _widthCache: WidthCache;\n  private _selectionRenderModel: ISelectionRenderModel = createSelectionRenderModel();\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _document: Document,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _helperContainer: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = this._document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = this._document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(this._themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(this._themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      this._rowContainer.remove();\n      this._selectionContainer.remove();\n      this._widthCache.dispose();\n      this._themeStyleElement.remove();\n      this._dimensionsStyleElement.remove();\n    }));\n\n    this._widthCache = new WidthCache(this._document, this._helperContainer);\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +   // TODO: find workaround for inline-block (creates ~20% render penalty)\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = this._document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      ` font-kerning: none;` +\n      ` white-space: pre` +\n      `}`;\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .xterm-dim {` +\n      ` color: ${color.multiplyOpacity(colors.foreground, 0.5).css};` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${RowCss.BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${RowCss.ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  border-bottom-style: hidden;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: inherit;` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}:not(.${RowCss.CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_BLINK_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css} !important;` +\n      ` color: ${colors.cursorAccent.css} !important;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_OUTLINE_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${RowCss.CURSOR_CLASS}.${RowCss.CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` border-bottom: 1px ${colors.cursor.css};` +\n      ` border-bottom-style: solid;` +\n      ` height: calc(100% - 1px);` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(c, 0.5).css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR}.${RowCss.DIM_CLASS} { color: ${color.multiplyOpacity(color.opaque(colors.background), 0.5).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  /**\n   * default letter spacing\n   * Due to rounding issues in dimensions dpr calc glyph might render\n   * slightly too wide or too narrow. The method corrects the stacking offsets\n   * by applying a default letter-spacing for all chars.\n   * The value gets passed to the row factory to avoid setting this value again\n   * (render speedup is roughly 10%).\n   */\n  private _setDefaultSpacing(): void {\n    // measure same char as in CharSizeService to get the base deviation\n    const spacing = this.dimensions.css.cell.width - this._widthCache.get('W', false, false);\n    this._rowContainer.style.letterSpacing = `${spacing}px`;\n    this._rowFactory.defaultSpacing = spacing;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = this._document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n    this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode);\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n    this._widthCache.clear();\n    this._setDefaultSpacing();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n    this.renderRows(0, this._bufferService.rows - 1);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n    this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    this._selectionContainer.replaceChildren();\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    this._selectionRenderModel.update(this._terminal, start, end, columnSelectMode);\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = this._selectionRenderModel.viewportStartRow;\n    const viewportEndRow = this._selectionRenderModel.viewportEndRow;\n    const viewportCappedStartRow = this._selectionRenderModel.viewportCappedStartRow;\n    const viewportCappedEndRow = this._selectionRenderModel.viewportCappedEndRow;\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = this._document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = this._document.createElement('div');\n    const left = colStart * this.dimensions.css.cell.width;\n    let width = this.dimensions.css.cell.width * (colEnd - colStart);\n    if (left + width > this.dimensions.css.canvas.width) {\n      width = this.dimensions.css.canvas.width - left;\n    }\n\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${left}px`;\n    element.style.width = `${width}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    // Refresh CSS\n    this._injectCss(this._themeService.colors);\n    // update spacing cache\n    this._widthCache.setFont(\n      this._optionsService.rawOptions.fontFamily,\n      this._optionsService.rawOptions.fontSize,\n      this._optionsService.rawOptions.fontWeight,\n      this._optionsService.rawOptions.fontWeightBold\n    );\n    this._setDefaultSpacing();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and\n       * `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    for (let y = start; y <= end; y++) {\n      const row = y + buffer.ydisp;\n      const rowElement = this._rowElements[y];\n      const lineData = buffer.lines.get(row);\n      if (!rowElement || !lineData) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          lineData,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          -1,\n          -1\n        )\n      );\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    /**\n     * NOTE: The linkifier may send out of viewport y-values if:\n     * - negative y-value: the link started at a higher line\n     * - y-value >= maxY: the link ends at a line below viewport\n     *\n     * For negative y-values we can simply adjust x = 0,\n     * as higher up link start means, that everything from\n     * (0,0) is a link under top-down-left-right char progression\n     *\n     * Additionally there might be a small chance of out-of-sync x|y-values\n     * from a race condition of render updates vs. link event handler execution:\n     * - (sync) resize: chances terminal buffer in sync, schedules render update async\n     * - (async) link handler race condition: new buffer metrics, but still on old render state\n     * - (async) render update: brings term metrics and render state back in sync\n     */\n    // clip coords into viewport\n    if (y < 0) x = 0;\n    if (y2 < 0) x2 = 0;\n    const maxY = this._bufferService.rows - 1;\n    y = Math.max(Math.min(y, maxY), 0);\n    y2 = Math.max(Math.min(y2, maxY), 0);\n\n    cols = Math.min(cols, this._bufferService.cols);\n    const buffer = this._bufferService.buffer;\n    const cursorAbsoluteY = buffer.ybase + buffer.y;\n    const cursorX = Math.min(buffer.x, cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n    const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n    const cursorInactiveStyle = this._optionsService.rawOptions.cursorInactiveStyle;\n\n    // refresh rows within link range\n    for (let i = y; i <= y2; ++i) {\n      const row = i + buffer.ydisp;\n      const rowElement = this._rowElements[i];\n      const bufferline = buffer.lines.get(row);\n      if (!rowElement || !bufferline) {\n        break;\n      }\n      rowElement.replaceChildren(\n        ...this._rowFactory.createRow(\n          bufferline,\n          row,\n          row === cursorAbsoluteY,\n          cursorStyle,\n          cursorInactiveStyle,\n          cursorX,\n          cursorBlink,\n          this.dimensions.css.cell.width,\n          this._widthCache,\n          enabled ? (i === y ? x : 0) : -1,\n          enabled ? ((i === y2 ? x2 : cols) - 1) : -1\n        )\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) 2018, 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { channels, color } from 'common/Color';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { treatGlyphAsBackgroundColor } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WidthCache } from 'browser/renderer/dom/WidthCache';\nimport { IColorContrastCache } from 'browser/Types';\n\n\nexport const enum RowCss {\n  BOLD_CLASS = 'xterm-bold',\n  DIM_CLASS = 'xterm-dim',\n  ITALIC_CLASS = 'xterm-italic',\n  UNDERLINE_CLASS = 'xterm-underline',\n  OVERLINE_CLASS = 'xterm-overline',\n  STRIKETHROUGH_CLASS = 'xterm-strikethrough',\n  CURSOR_CLASS = 'xterm-cursor',\n  CURSOR_BLINK_CLASS = 'xterm-cursor-blink',\n  CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block',\n  CURSOR_STYLE_OUTLINE_CLASS = 'xterm-cursor-outline',\n  CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar',\n  CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline'\n}\n\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  public defaultSpacing = 0;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(\n    lineData: IBufferLine,\n    row: number,\n    isCursorRow: boolean,\n    cursorStyle: string | undefined,\n    cursorInactiveStyle: string | undefined,\n    cursorX: number,\n    cursorBlink: boolean,\n    cellWidth: number,\n    widthCache: WidthCache,\n    linkStart: number,\n    linkEnd: number\n  ): HTMLSpanElement[] {\n\n    const elements: HTMLSpanElement[] = [];\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    const colors = this._themeService.colors;\n\n    let lineLength = lineData.getNoBgTrimmedLength();\n    if (isCursorRow && lineLength < cursorX + 1) {\n      lineLength = cursorX + 1;\n    }\n\n    let charElement: HTMLSpanElement | undefined;\n    let cellAmount = 0;\n    let text = '';\n    let oldBg = 0;\n    let oldFg = 0;\n    let oldExt = 0;\n    let oldLinkHover: number | boolean = false;\n    let oldSpacing = 0;\n    let oldIsInSelection: boolean = false;\n    let spacing = 0;\n    const classes: string[] = [];\n\n    const hasHover = linkStart !== -1 && linkEnd !== -1;\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const isInSelection = this._isCellInSelection(x, row);\n      const isCursorCell = isCursorRow && x === cursorX;\n      const isLinkHover = hasHover && x >= linkStart && x <= linkEnd;\n\n      let isDecorated = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        isDecorated = true;\n      });\n\n      // get chars to render for this cell\n      let chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n      if (chars === ' ' && (cell.isUnderline() || cell.isOverline())) {\n        chars = '\\xa0';\n      }\n\n      // lookup char render width and calc spacing\n      spacing = width * cellWidth - widthCache.get(chars, cell.isBold(), cell.isItalic());\n\n      if (!charElement) {\n        charElement = this._document.createElement('span');\n      } else {\n        /**\n         * chars can only be merged on existing span if:\n         * - existing span only contains mergeable chars (cellAmount != 0)\n         * - bg did not change (or both are in selection)\n         * - fg did not change (or both are in selection and selection fg is set)\n         * - ext did not change\n         * - underline from hover state did not change\n         * - cell content renders to same letter-spacing\n         * - cell is not cursor\n         */\n        if (\n          cellAmount\n          && (\n            (isInSelection && oldIsInSelection)\n            || (!isInSelection && !oldIsInSelection && cell.bg === oldBg)\n          )\n          && (\n            (isInSelection && oldIsInSelection && colors.selectionForeground)\n            || cell.fg === oldFg\n          )\n          && cell.extended.ext === oldExt\n          && isLinkHover === oldLinkHover\n          && spacing === oldSpacing\n          && !isCursorCell\n          && !isJoined\n          && !isDecorated\n        ) {\n          // no span alterations, thus only account chars skipping all code below\n          if (cell.isInvisible()) {\n            text += WHITESPACE_CELL_CHAR;\n          } else {\n            text += chars;\n          }\n          cellAmount++;\n          continue;\n        } else {\n          /**\n           * cannot merge:\n           * - apply left-over text to old span\n           * - create new span, reset state holders cellAmount & text\n           */\n          if (cellAmount) {\n            charElement.textContent = text;\n          }\n          charElement = this._document.createElement('span');\n          cellAmount = 0;\n          text = '';\n        }\n      }\n      // preserve conditions for next merger eval round\n      oldBg = cell.bg;\n      oldFg = cell.fg;\n      oldExt = cell.extended.ext;\n      oldLinkHover = isLinkHover;\n      oldSpacing = spacing;\n      oldIsInSelection = isInSelection;\n\n      if (isJoined) {\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorCell && this._coreService.isCursorInitialized) {\n        classes.push(RowCss.CURSOR_CLASS);\n        if (this._coreBrowserService.isFocused) {\n          if (cursorBlink) {\n            classes.push(RowCss.CURSOR_BLINK_CLASS);\n          }\n          classes.push(\n            cursorStyle === 'bar'\n              ? RowCss.CURSOR_STYLE_BAR_CLASS\n              : cursorStyle === 'underline'\n                ? RowCss.CURSOR_STYLE_UNDERLINE_CLASS\n                : RowCss.CURSOR_STYLE_BLOCK_CLASS\n          );\n        } else {\n          if (cursorInactiveStyle) {\n            switch (cursorInactiveStyle) {\n              case 'outline':\n                classes.push(RowCss.CURSOR_STYLE_OUTLINE_CLASS);\n                break;\n              case 'block':\n                classes.push(RowCss.CURSOR_STYLE_BLOCK_CLASS);\n                break;\n              case 'bar':\n                classes.push(RowCss.CURSOR_STYLE_BAR_CLASS);\n                break;\n              case 'underline':\n                classes.push(RowCss.CURSOR_STYLE_UNDERLINE_CLASS);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n\n      if (cell.isBold()) {\n        classes.push(RowCss.BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        classes.push(RowCss.ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        classes.push(RowCss.DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        text = WHITESPACE_CELL_CHAR;\n      } else {\n        text = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        classes.push(`${RowCss.UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isOverline()) {\n        classes.push(RowCss.OVERLINE_CLASS);\n        if (text === ' ') {\n          text = '\\xa0'; // = &nbsp;\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        classes.push(RowCss.STRIKETHROUGH_CLASS);\n      }\n\n      // apply link hover underline late, effectively overrides any previous text-decoration\n      // settings\n      if (isLinkHover) {\n        charElement.style.textDecoration = 'underline';\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection\n      if (!isTop && isInSelection) {\n        // If in the selection, force the element to be above the selection to improve contrast and\n        // support opaque selections. The applies background is not actually needed here as\n        // selection is drawn in a seperate container, the main purpose of this to ensuring minimum\n        // contrast ratio\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        bg = bgOverride.rgba >> 8 & 0xFFFFFF;\n        bgColorMode = Attributes.CM_RGB;\n        // Since an opaque selection is being rendered, the selection pretends to be a decoration to\n        // ensure text is drawn above the selection.\n        isTop = true;\n        // Apply selection foreground if applicable\n        if (colors.selectionForeground) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        classes.push('xterm-decoration-top');\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          classes.push(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = channels.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            classes.push(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            classes.push(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = channels.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, fgOverride)) {\n            if (isInverse) {\n              classes.push(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      // apply CSS classes\n      // slightly faster than using classList by omitting\n      // checks for doubled entries (code above should not have doublets)\n      if (classes.length) {\n        charElement.className = classes.join(' ');\n        classes.length = 0;\n      }\n\n      // exclude conditions for cell merging - never merge these\n      if (!isCursorCell && !isJoined && !isDecorated) {\n        cellAmount++;\n      } else {\n        charElement.textContent = text;\n      }\n      // apply letter-spacing rule\n      if (spacing !== this.defaultSpacing) {\n        charElement.style.letterSpacing = `${spacing}px`;\n      }\n\n      elements.push(charElement);\n      x = lastCharX;\n    }\n\n    // postfix text of last merged span\n    if (charElement && cellAmount) {\n      charElement.textContent = text;\n    }\n\n    return elements;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || treatGlyphAsBackgroundColor(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    const cache = this._getContrastCache(cell);\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = cache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      // Dim cells only require half the contrast, otherwise they wouldn't be distinguishable from\n      // non-dim cells\n      const ratio = this._optionsService.rawOptions.minimumContrastRatio / (cell.isDim() ? 2 : 1);\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, ratio);\n      cache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _getContrastCache(cell: ICellData): IColorContrastCache {\n    if (cell.isDim()) {\n      return this._themeService.colors.halfContrastCache;\n    }\n    return this._themeService.colors.contrastCache;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2023 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { FontWeight } from 'common/services/Services';\n\n\nexport const enum WidthCacheSettings {\n  /** sentinel for unset values in flat cache */\n  FLAT_UNSET = -9999,\n  /** size of flat cache, size-1 equals highest codepoint handled by flat */\n  FLAT_SIZE = 256,\n  /** char repeat for measuring */\n  REPEAT = 32\n}\n\n\nconst enum FontVariant {\n  REGULAR = 0,\n  BOLD = 1,\n  ITALIC = 2,\n  BOLD_ITALIC = 3\n}\n\n\nexport class WidthCache implements IDisposable {\n  // flat cache for regular variant up to CacheSettings.FLAT_SIZE\n  // NOTE: ~4x faster access than holey (serving >>80% of terminal content)\n  //       It has a small memory footprint (only 1MB for full BMP caching),\n  //       still the sweet spot is not reached before touching 32k different codepoints,\n  //       thus we store the remaining <<20% of terminal data in a holey structure.\n  protected _flat = new Float32Array(WidthCacheSettings.FLAT_SIZE);\n\n  // holey cache for bold, italic and bold&italic for any string\n  // FIXME: can grow really big over time (~8.5 MB for full BMP caching),\n  //        so a shared API across terminals is needed\n  protected _holey: Map<string, number> | undefined;\n\n  private _font = '';\n  private _fontSize = 0;\n  private _weight: FontWeight = 'normal';\n  private _weightBold: FontWeight = 'bold';\n  private _container: HTMLDivElement;\n  private _measureElements: HTMLSpanElement[] = [];\n\n  constructor(_document: Document, _helperContainer: HTMLElement) {\n    this._container = _document.createElement('div');\n    this._container.classList.add('xterm-width-cache-measure-container');\n    this._container.setAttribute('aria-hidden', 'true');\n    // SP should stack in spans\n    this._container.style.whiteSpace = 'pre';\n    // avoid undercuts in non-monospace fonts from kerning\n    this._container.style.fontKerning = 'none';\n\n    const regular = _document.createElement('span');\n    regular.classList.add('xterm-char-measure-element');\n\n    const bold = _document.createElement('span');\n    bold.classList.add('xterm-char-measure-element');\n    bold.style.fontWeight = 'bold';\n\n    const italic = _document.createElement('span');\n    italic.classList.add('xterm-char-measure-element');\n    italic.style.fontStyle = 'italic';\n\n    const boldItalic = _document.createElement('span');\n    boldItalic.classList.add('xterm-char-measure-element');\n    boldItalic.style.fontWeight = 'bold';\n    boldItalic.style.fontStyle = 'italic';\n\n    // NOTE: must be in order of FontVariant\n    this._measureElements = [regular, bold, italic, boldItalic];\n    this._container.appendChild(regular);\n    this._container.appendChild(bold);\n    this._container.appendChild(italic);\n    this._container.appendChild(boldItalic);\n\n    _helperContainer.appendChild(this._container);\n\n    this.clear();\n  }\n\n  public dispose(): void {\n    this._container.remove();           // remove elements from DOM\n    this._measureElements.length = 0;   // release element refs\n    this._holey = undefined;            // free cache memory via GC\n  }\n\n  /**\n   * Clear the width cache.\n   */\n  public clear(): void {\n    this._flat.fill(WidthCacheSettings.FLAT_UNSET);\n    // .clear() has some overhead, re-assign instead (>3 times faster)\n    this._holey = new Map<string, number>();\n  }\n\n  /**\n   * Set the font for measuring.\n   * Must be called for any changes on font settings.\n   * Also clears the cache.\n   */\n  public setFont(font: string, fontSize: number, weight: FontWeight, weightBold: FontWeight): void {\n    // skip if nothing changed\n    if (font === this._font\n      && fontSize === this._fontSize\n      && weight === this._weight\n      && weightBold === this._weightBold\n    ) {\n      return;\n    }\n\n    this._font = font;\n    this._fontSize = fontSize;\n    this._weight = weight;\n    this._weightBold = weightBold;\n\n    this._container.style.fontFamily = this._font;\n    this._container.style.fontSize = `${this._fontSize}px`;\n    this._measureElements[FontVariant.REGULAR].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD].style.fontWeight = `${weightBold}`;\n    this._measureElements[FontVariant.ITALIC].style.fontWeight = `${weight}`;\n    this._measureElements[FontVariant.BOLD_ITALIC].style.fontWeight = `${weightBold}`;\n\n    this.clear();\n  }\n\n  /**\n   * Get the render width for cell content `c` with current font settings.\n   * `variant` denotes the font variant to be used.\n   */\n  public get(c: string, bold: boolean | number, italic: boolean | number): number {\n    let cp = 0;\n    if (!bold && !italic && c.length === 1 && (cp = c.charCodeAt(0)) < WidthCacheSettings.FLAT_SIZE) {\n      if (this._flat[cp] !== WidthCacheSettings.FLAT_UNSET) {\n        return this._flat[cp];\n      }\n      const width = this._measure(c, 0);\n      if (width > 0) {\n        this._flat[cp] = width;\n      }\n      return width;\n    }\n    let key = c;\n    if (bold) key += 'B';\n    if (italic) key += 'I';\n    let width = this._holey!.get(key);\n    if (width === undefined) {\n      let variant = 0;\n      if (bold) variant |= FontVariant.BOLD;\n      if (italic) variant |= FontVariant.ITALIC;\n      width = this._measure(c, variant);\n      if (width > 0) {\n        this._holey!.set(key, width);\n      }\n    }\n    return width;\n  }\n\n  protected _measure(c: string, variant: FontVariant): number {\n    const el = this._measureElements[variant];\n    el.textContent = c.repeat(WidthCacheSettings.REPEAT);\n    return el.offsetWidth / WidthCacheSettings.REPEAT;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge\n// would result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function treatGlyphAsBackgroundColor(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n\nexport function computeNextVariantOffset(cellWidth: number, lineWidth: number, currentOffset: number = 0): number {\n  return (cellWidth - (Math.round(lineWidth) * 2 - currentOffset)) % (Math.round(lineWidth) * 2);\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminal } from 'browser/Types';\nimport { ISelectionRenderModel } from 'browser/renderer/shared/Types';\nimport { Terminal } from '@xterm/xterm';\n\nclass SelectionRenderModel implements ISelectionRenderModel {\n  public hasSelection!: boolean;\n  public columnSelectMode!: boolean;\n  public viewportStartRow!: number;\n  public viewportEndRow!: number;\n  public viewportCappedStartRow!: number;\n  public viewportCappedEndRow!: number;\n  public startCol!: number;\n  public endCol!: number;\n  public selectionStart: [number, number] | undefined;\n  public selectionEnd: [number, number] | undefined;\n\n  constructor() {\n    this.clear();\n  }\n\n  public clear(): void {\n    this.hasSelection = false;\n    this.columnSelectMode = false;\n    this.viewportStartRow = 0;\n    this.viewportEndRow = 0;\n    this.viewportCappedStartRow = 0;\n    this.viewportCappedEndRow = 0;\n    this.startCol = 0;\n    this.endCol = 0;\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n  }\n\n  public update(terminal: ITerminal, start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this.selectionStart = start;\n    this.selectionEnd = end;\n    // Selection does not exist\n    if (!start || !end || (start[0] === end[0] && start[1] === end[1])) {\n      this.clear();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportY = terminal.buffers.active.ydisp;\n    const viewportStartRow = start[1] - viewportY;\n    const viewportEndRow = end[1] - viewportY;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= terminal.rows || viewportCappedEndRow < 0) {\n      this.clear();\n      return;\n    }\n\n    this.hasSelection = true;\n    this.columnSelectMode = columnSelectMode;\n    this.viewportStartRow = viewportStartRow;\n    this.viewportEndRow = viewportEndRow;\n    this.viewportCappedStartRow = viewportCappedStartRow;\n    this.viewportCappedEndRow = viewportCappedEndRow;\n    this.startCol = start[0];\n    this.endCol = end[0];\n  }\n\n  public isCellSelected(terminal: Terminal, x: number, y: number): boolean {\n    if (!this.hasSelection) {\n      return false;\n    }\n    y -= terminal.buffer.active.viewportY;\n    if (this.columnSelectMode) {\n      if (this.startCol <= this.endCol) {\n        return x >= this.startCol && y >= this.viewportCappedStartRow &&\n          x < this.endCol && y <= this.viewportCappedEndRow;\n      }\n      return x < this.startCol && y >= this.viewportCappedStartRow &&\n        x >= this.endCol && y <= this.viewportCappedEndRow;\n    }\n    return (y > this.viewportStartRow && y < this.viewportEndRow) ||\n      (this.viewportStartRow === this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportEndRow && x < this.endCol) ||\n      (this.viewportStartRow < this.viewportEndRow && y === this.viewportStartRow && x >= this.startCol);\n  }\n}\n\nexport function createSelectionRenderModel(): ISelectionRenderModel {\n  return new SelectionRenderModel();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    try {\n      this._measureStrategy = this.register(new TextMetricsMeasureStrategy(this._optionsService));\n    } catch {\n      this._measureStrategy = this.register(new DomMeasureStrategy(document, parentElement, this._optionsService));\n    }\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): Readonly<IMeasureResult>;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\nconst enum DomMeasureStrategyConstants {\n  REPEAT = 32\n}\n\nabstract class BaseMeasureStategy extends Disposable implements IMeasureStrategy {\n  protected _result: IMeasureResult = { width: 0, height: 0 };\n\n  protected _validateAndSet(width: number | undefined, height: number | undefined): void {\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (width !== undefined && width > 0 && height !== undefined && height > 0) {\n      this._result.width = width;\n      this._result.height = height;\n    }\n  }\n\n  public abstract measure(): Readonly<IMeasureResult>;\n}\n\nclass DomMeasureStrategy extends BaseMeasureStategy {\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W'.repeat(DomMeasureStrategyConstants.REPEAT);\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._measureElement.style.whiteSpace = 'pre';\n    this._measureElement.style.fontKerning = 'none';\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    this._validateAndSet(Number(this._measureElement.offsetWidth) / DomMeasureStrategyConstants.REPEAT, Number(this._measureElement.offsetHeight));\n\n    return this._result;\n  }\n}\n\nclass TextMetricsMeasureStrategy extends BaseMeasureStategy {\n  private _canvas: OffscreenCanvas;\n  private _ctx: OffscreenCanvasRenderingContext2D;\n\n  constructor(\n    private _optionsService: IOptionsService\n  ) {\n    super();\n    // This will throw if any required API is not supported\n    this._canvas = new OffscreenCanvas(100, 100);\n    this._ctx = this._canvas.getContext('2d')!;\n    const a = this._ctx.measureText('W');\n    if (!('width' in a && 'fontBoundingBoxAscent' in a && 'fontBoundingBoxDescent' in a)) {\n      throw new Error('Required font metrics not supported');\n    }\n  }\n\n  public measure(): Readonly<IMeasureResult> {\n    this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;\n    const metrics = this._ctx.measureText('W');\n    this._validateAndSet(metrics.width, metrics.fontBoundingBoxAscent + metrics.fontBoundingBoxDescent);\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { ICoreBrowserService } from './Services';\nimport { EventEmitter, forwardEvent } from 'common/EventEmitter';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class CoreBrowserService extends Disposable implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n  private _screenDprMonitor = new ScreenDprMonitor(this._window);\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n  private readonly _onWindowChange = this.register(new EventEmitter<Window & typeof globalThis>());\n  public readonly onWindowChange = this._onWindowChange.event;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    private _window: Window & typeof globalThis,\n    public readonly mainDocument: Document\n  ) {\n    super();\n\n    // Monitor device pixel ratio\n    this.register(this.onWindowChange(w => this._screenDprMonitor.setWindow(w)));\n    this.register(forwardEvent(this._screenDprMonitor.onDprChange, this._onDprChange));\n\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get window(): Window & typeof globalThis {\n    return this._window;\n  }\n\n  public set window(value: Window & typeof globalThis) {\n    if (this._window !== value) {\n      this._window = value;\n      this._onWindowChange.fire(this._window);\n    }\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nclass ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n  private _windowResizeListener = this.register(new MutableDisposable());\n\n  private readonly _onDprChange = this.register(new EventEmitter<number>());\n  public readonly onDprChange = this._onDprChange.event;\n\n  constructor(private _parentWindow: Window) {\n    super();\n\n    // Initialize listener and dpr value\n    this._outerListener = () => this._setDprAndFireIfDiffers();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._updateDpr();\n\n    // Monitor active window resize\n    this._setWindowResizeListener();\n\n    // Setup additional disposables\n    this.register(toDisposable(() => this.clearListener()));\n  }\n\n\n  public setWindow(parentWindow: Window): void {\n    this._parentWindow = parentWindow;\n    this._setWindowResizeListener();\n    this._setDprAndFireIfDiffers();\n  }\n\n  private _setWindowResizeListener(): void {\n    this._windowResizeListener.value = addDisposableDomListener(this._parentWindow, 'resize', () => this._setDprAndFireIfDiffers());\n  }\n\n  private _setDprAndFireIfDiffers(): void {\n    if (this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio) {\n      this._onDprChange.fire(this._parentWindow.devicePixelRatio);\n    }\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._outerListener = undefined;\n  }\n}\n","import { ILinkProvider, ILinkProviderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\n\nexport class LinkProviderService extends Disposable implements ILinkProviderService {\n  declare public serviceBrand: undefined;\n\n  public readonly linkProviders: ILinkProvider[] = [];\n\n  constructor() {\n    super();\n    this.register(toDisposable(() => this.linkProviders.length = 0));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this.linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this.linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this.linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n    if (!this._charSizeService.hasValidSize) {\n      return undefined;\n    }\n    coords[0] = Math.min(Math.max(coords[0], 0), this._renderService.dimensions.css.canvas.width - 1);\n    coords[1] = Math.min(Math.max(coords[1], 0), this._renderService.dimensions.css.canvas.height - 1);\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: MutableDisposable<IRenderer> = this.register(new MutableDisposable());\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _pausedResizeTask = new DebouncedIdleTask();\n  private _observerDisposable = this.register(new MutableDisposable());\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange = this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer.value!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end), coreBrowserService);\n    this.register(this._renderDebouncer);\n\n    this.register(coreBrowserService.onDprChange(() => this.handleDevicePixelRatioChange()));\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer.value?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    this._registerIntersectionObserver(coreBrowserService.window, screenElement);\n    this.register(coreBrowserService.onWindowChange((w) => this._registerIntersectionObserver(w, screenElement)));\n  }\n\n  private _registerIntersectionObserver(w: Window & typeof globalThis, screenElement: HTMLElement): void {\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in w) {\n      const observer = new w.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this._observerDisposable.value = toDisposable(() => observer.disconnect());\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n\n    // Since this is debounced, a resize event could have happened between the time a refresh was\n    // requested and when this triggers. Clamp the values of start and end to ensure they're valid\n    // given the current viewport state.\n    start = Math.min(start, this._rowCount - 1);\n    end = Math.min(end, this._rowCount - 1);\n\n    // Render\n    this._renderer.value.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.value.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer.value;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    this._renderer.value = renderer;\n    // If the value was not set, the terminal is being disposed so ignore it\n    if (this._renderer.value) {\n      this._renderer.value.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n      // Force a refresh\n      this._needsSelectionRefresh = true;\n      this._fullRefresh();\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer.value) {\n      return;\n    }\n    this._renderer.value.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer.value) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer.value?.handleResize(cols, rows));\n    } else {\n      this._renderer.value.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer.value?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer.value?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer.value?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.value?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer.value?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.value?.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { ICoreBrowserService, IMouseService, IRenderService, ISelectionService } from 'browser/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport * as Browser from 'common/Platform';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport { getRangeLength } from 'common/buffer/BufferRange';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        if (this._model.selectionEnd[0] < this._bufferService.cols) {\n          this._model.selectionEnd[0]++;\n        }\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ILink, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { AllColorIndex, IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n\n  readonly onDprChange: IEvent<number>;\n  readonly onWindowChange: IEvent<Window & typeof globalThis>;\n\n  /**\n   * Gets or sets the parent window that the terminal is rendered into. DOM and rendering APIs (e.g.\n   * requestAnimationFrame) should be invoked in the context of this window. This should be set when\n   * the window hosting the xterm.js instance changes.\n   */\n  window: Window & typeof globalThis;\n  /**\n   * The document of the primary window to be used to create elements when working with multiple\n   * windows. This is defined by the documentOverride setting.\n   */\n  readonly mainDocument: Document;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: AllColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n\n\nexport const ILinkProviderService = createDecorator<ILinkProviderService>('LinkProviderService');\nexport interface ILinkProviderService extends IDisposable {\n  serviceBrand: undefined;\n  readonly linkProviders: ReadonlyArray<ILinkProvider>;\n  registerLinkProvider(linkProvider: ILinkProvider): IDisposable;\n}\nexport interface ILinkProvider {\n  provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void;\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { AllColorIndex, IColor, SpecialColorIndex } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache = new ColorContrastCache();\n  private _halfContrastCache: IColorContrastCache = new ColorContrastCache();\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache,\n      halfContrastCache: this._halfContrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._halfContrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: AllColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: AllColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case SpecialColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case SpecialColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case SpecialColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return channels.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb',\n * '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    // This is guaranteed to run in the first window, so document should be correct\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return channels.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return channels.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return channels.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  export function blend(bg: number, fg: number): number {\n    $a = (fg & 0xFF) / 0xFF;\n    if ($a === 1) {\n      return fg;\n    }\n    const fgR = (fg >> 24) & 0xFF;\n    const fgG = (fg >> 16) & 0xFF;\n    const fgB = (fg >> 8) & 0xFF;\n    const bgR = (bg >> 24) & 0xFF;\n    const bgG = (bg >> 16) & 0xFF;\n    const bgB = (bg >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    return channels.toRgba($r, $g, $b);\n  }\n\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, MutableDisposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsWrappingHeuristics = this.register(new MutableDisposable());\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onMultipleOptionChange(['windowsMode', 'windowsPty'], () => this._handleWindowsPtyOptionChange()));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public input(data: string, wasUserInput: boolean = true): void {\n    this.coreService.triggerDataEvent(data, wasUserInput);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used to avoid\n   * unwanted events being handled by the viewport when the event was triggered from the viewport\n   * originally.\n   * @param source Which component the event came from.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  public scrollToTop(): void {\n    this.scrollLines(-this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToBottom(): void {\n    this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this._bufferService.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    this._handleWindowsPtyOptionChange();\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n\n  private _handleWindowsPtyOptionChange(): void {\n    let value = false;\n    const windowsPty = this.optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber !== undefined && windowsPty.buildNumber !== undefined) {\n      value = !!(windowsPty.backend === 'conpty' && windowsPty.buildNumber < 21376);\n    } else if (this.optionsService.rawOptions.windowsMode) {\n      value = true;\n    }\n    if (value) {\n      this._enableWindowsWrappingHeuristics();\n    } else {\n      this._windowsWrappingHeuristics.clear();\n    }\n  }\n\n  protected _enableWindowsWrappingHeuristics(): void {\n    if (!this._windowsWrappingHeuristics.value) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsWrappingHeuristics.value = toDisposable(() => {\n        for (const d of disposables) {\n          d.dispose();\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    this.clearListeners();\n    this._disposed = true;\n  }\n\n  public clearListeners(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n\nexport function runAndSubscribe<T>(event: IEvent<T>, handler: (e: T | undefined) => any): IDisposable {\n  handler(undefined);\n  return event(e => handler(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType, SpecialColorIndex } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via @xterm/addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with same chunk and the promise\n   *   resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order\n   * and proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing, fire only for rows within the\n    // _viewport_ which is relative to ydisp, not relative to ybase.\n    const viewportEnd = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    const viewportStart = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);\n    if (viewportStart < this._bufferService.rows) {\n      this._onRequestRefreshRows.fire(Math.min(viewportStart, this._bufferService.rows - 1), Math.min(viewportEnd, this._bufferService.rows - 1));\n    }\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, curAttr);\n    }\n\n    let precedingJoinState = this._parser.precedingJoinState;\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      const currentInfo = this._unicodeService.charProperties(code, precedingJoinState);\n      chWidth = UnicodeService.extractWidth(currentInfo);\n      const shouldJoin = UnicodeService.extractShouldJoin(currentInfo);\n      const oldWidth = shouldJoin ? UnicodeService.extractWidth(precedingJoinState) : 0;\n      precedingJoinState = currentInfo;\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - oldWidth > cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          const oldRow = bufferRow;\n          let oldCol = this._activeBuffer.x - oldWidth;\n          this._activeBuffer.x = oldWidth;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n          if (oldWidth > 0 && bufferRow instanceof BufferLine) {\n            // Combining character widens 1 column to 2.\n            // Move old character to next line.\n            bufferRow.copyCellsFrom(oldRow as BufferLine,\n              oldCol, 0, oldWidth, false);\n          }\n          // clear left over cells to the right\n          while (oldCol < cols) {\n            oldRow.setCellFromCodepoint(oldCol++, 0, 1, curAttr);\n          }\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (shouldJoin && this._activeBuffer.x) {\n        const offset = bufferRow.getWidth(this._activeBuffer.x - 1) ? 1 : 2;\n        // if empty cell after fullwidth, need to go 2 cells back\n        // it is save to step 2 cells back here\n        // since an empty cell is only set by fullwidth chars\n        bufferRow.addCodepointToCell(this._activeBuffer.x - offset,\n          code, chWidth);\n        for (let delta = chWidth - oldWidth; --delta >= 0; ) {\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n        continue;\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth - oldWidth, this._activeBuffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodepoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x++, code, chWidth, curAttr);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, curAttr);\n        }\n      }\n    }\n\n    this._parser.precedingJoinState = precedingJoinState;\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodepoint(this._activeBuffer.x, 0, 1, curAttr);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    } else {\n      // There was an explicit line feed (not just a carriage return), so clear the wrapped state of\n      // the line. This is particularly important on conpty/Windows where revisiting lines to\n      // reprint is common, especially on resize. Note that the windowsMode wrapped line heuristics\n      // can mess with this so windowsMode should be disabled, which is recommended on Windows build\n      // 21376 and above.\n      this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one\n        //   cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once\n          // before early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row. The cell gets replaced with the eraseChar of\n   * the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y);\n    if (line) {\n      line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n      this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the\n   * blank characters. Text between the cursor and right margin moves to the right. Characters moved\n   * past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to\n   * the left. Character attributes move with the characters. The terminal adds blank characters at\n   * the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll\n   * margins, moving content to the right. Content at the right margin is lost. DECIC has no effect\n   * outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData())\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * We extend xterm's behavior to allow repeating entire grapheme clusters.\n   * This isn't 100% xterm-compatible, but it seems saner and more useful.\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty, the\n   * preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is\n   * set. REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    const joinState = this._parser.precedingJoinState;\n    if (!joinState) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const chWidth = UnicodeService.extractWidth(joinState);\n    const x = this._activeBuffer.x - chWidth;\n    const bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n    const text = bufferRow.getString(x);\n    const data = new Uint32Array(text.length * length);\n    let idata = 0;\n    for (let itext = 0; itext < text.length; ) {\n      const ch = text.codePointAt(itext) || 0;\n      data[idata++] = ch;\n      itext += ch > 0xffff ? 2 : 1;\n    }\n    let tlength = idata;\n    for (let i = 1; i < length; ++i) {\n      data.copyWithin(tlength, 0, idata);\n      tlength += idata;\n    }\n    this.print(data, 0, tlength);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_RESET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_SET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 67) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 53        | Overlined.                                               | #Y      |\n   * | 55        | Not Overlined.                                           | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58)\n   * as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 53) {\n        // overline\n        attr.bg |= BgFlags.OVERLINE;\n      } else if (p === 55) {\n        // not overline\n        attr.bg &= ~BgFlags.OVERLINE;\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full\n   * terminal bootstrap, DECSTR only resets certain attributes. For most needs DECSTR should be\n   * sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event\n   * `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from\n   * `XParseColor` (see OSC 10 for supported formats). There may be multipe `c ; spec` pairs present\n   * in the same instruction. If `spec` contains `?` the terminal returns a sequence with the\n   * currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (isValidColorIndex(index)) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character.\n   * Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover\n   * feedback. Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [SpecialColorIndex.FOREGROUND, SpecialColorIndex.BACKGROUND, SpecialColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (isValidColorIndex(index)) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: SpecialColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the\n   * corresponding CSI string, `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n\nfunction isValidColorIndex(value: number): value is ColorIndex {\n  return 0 <= value && value < 256;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n  private _value?: T;\n  private _isDisposed = false;\n\n  /**\n   * Gets the value if it exists.\n   */\n  public get value(): T | undefined {\n    return this._isDisposed ? undefined : this._value;\n  }\n\n  /**\n   * Sets the value, disposing of the old value if it exists.\n   */\n  public set value(value: T | undefined) {\n    if (this._isDisposed || value === this._value) {\n      return;\n    }\n    this._value?.dispose();\n    this._value = value;\n  }\n\n  /**\n   * Resets the stored value and disposes of the previously stored value.\n   */\n  public clear(): void {\n    this.value = undefined;\n  }\n\n  public dispose(): void {\n    this._isDisposed = true;\n    this._value?.dispose();\n    this._value = undefined;\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\ndeclare const process: unknown;\n\nexport const isNode = (typeof process !== 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value));\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    // Duplicate the array to avoid issues when _array changes while iterating\n    return [...this._array].values();\n  }\n\n  private _search(key: number): number {\n    let min = 0;\n    let max = this._array.length - 1;\n    while (max >= min) {\n      let mid = (min + max) >> 1;\n      const midKey = this._getKey(this._array[mid]);\n      if (midKey > key) {\n        max = mid - 1;\n      } else if (midKey < key) {\n        min = mid + 1;\n      } else {\n        // key in list, walk to lowest duplicate\n        while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n          mid--;\n        }\n        return mid;\n      }\n    }\n    // key not in list\n    // still return closest min (also used as insert position)\n    return min;\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n  public isOverline(): number      { return this.bg & BgFlags.OVERLINE; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n  public getUnderlineVariantOffset(): number {\n    return this.extended.underlineVariantOffset;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  public get underlineVariantOffset(): number {\n    const val = (this._ext & ExtFlags.VARIANT_OFFSET) >> 29;\n    if (val < 0) {\n      return val ^ 0xFFFFFFF8;\n    }\n    return val;\n  }\n  public set underlineVariantOffset(value: number) {\n    this._ext &= ~ExtFlags.VARIANT_OFFSET;\n    this._ext |= (value << 29) & ExtFlags.VARIANT_OFFSET;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IdleTaskQueue } from 'common/TaskQueue';\nimport { IAttributeData, IBufferLine, ICellData, ICharset } from 'common/Types';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { getWrappedLineTrimmedLength, reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths } from 'common/buffer/BufferReflow';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, WHITESPACE_CELL_WIDTH } from 'common/buffer/Constants';\nimport { Marker } from 'common/buffer/Marker';\nimport { IBuffer } from 'common/buffer/Types';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode || this._optionsService.rawOptions.windowsPty.backend !== undefined || this._optionsService.rawOptions.windowsPty.buildNumber !== undefined) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted\n      // lines, which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    const windowsPty = this._optionsService.rawOptions.windowsPty;\n    if (windowsPty && windowsPty.buildNumber) {\n      return this._hasScrollback && windowsPty.backend === 'conpty' && windowsPty.buildNumber >= 21376;\n    }\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IAttributeData, IBufferLine, ICellData, IExtendedAttrs } from 'common/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { CellData } from 'common/buffer/CellData';\nimport { Attributes, BgFlags, CHAR_DATA_ATTR_INDEX, CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, Content, NULL_CELL_CHAR, NULL_CELL_CODE, NULL_CELL_WIDTH, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodepoint(index: number, codePoint: number, width: number, attrs: IAttributeData): void {\n    if (attrs.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = attrs.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = attrs.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = attrs.bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number, width: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n    }\n    if (width) {\n      content &= ~Content.WIDTH_MASK;\n      content |= width << Content.WIDTH_SHIFT;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodepoint(this.length - 1, 0, 1, fillCellData);\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodepoint(pos - 1, 0, 1, fillCellData);\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodepoint(pos, 0, 1, fillCellData);\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodepoint(end, 0, 1, fillCellData);\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodepoint(start - 1, 0, 1, fillCellData);\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodepoint(end, 0, 1, fillCellData);\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public getNoBgTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK) || (this._data[i * CELL_SIZE + Cell.BG] & Attributes.CM_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  /**\n   * Translates the buffer line to a string.\n   *\n   * @param trimRight Whether to trim any empty cells on the right.\n   * @param startCol The column to start the string (0-based inclusive).\n   * @param endCol The column to end the string (0-based exclusive).\n   * @param outColumns if specified, this array will be filled with column numbers such that\n   * `returnedString[i]` is displayed at `outColumns[i]` column. `outColumns[returnedString.length]`\n   * is where the character following `returnedString` will be displayed.\n   *\n   * When a single cell is translated to multiple UTF-16 code units (e.g. surrogate pair) in the\n   * returned string, the corresponding entries in `outColumns` will have the same column number.\n   */\n  public translateToString(trimRight?: boolean, startCol?: number, endCol?: number, outColumns?: number[]): string {\n    startCol = startCol ?? 0;\n    endCol = endCol ?? this.length;\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    if (outColumns) {\n      outColumns.length = 0;\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      const chars = (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      result += chars;\n      if (outColumns) {\n        for (let i = 0; i < chars.length; ++i) {\n          outColumns.push(startCol);\n        }\n      }\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by at least 1\n    }\n    if (outColumns) {\n      outColumns.push(startCol);\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from '@xterm/xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000,\n  OVERLINE = 0x40000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..29\n   */\n  UNDERLINE_STYLE = 0x1C000000,\n\n  /**\n   * bit 30..32\n   *\n   * An optional variant for the glyph, this can be used for example to offset underlines by a\n   * number of pixels to create a perfect pattern.\n   */\n  VARIANT_OFFSET = 0xE0000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private readonly _disposables: IDisposable[] = [];\n\n  private readonly _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      result.key = ev.ctrlKey ? '\\b' : C0.DEL; // ^H or ^?\n      if (ev.altKey) {\n        result.key = C0.ESC + result.key;\n      }\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock,\n        // volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate\n      // pair conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\nimport { UnicodeService } from 'common/services/UnicodeService';\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): UnicodeCharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as UnicodeCharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    let width = this.wcwidth(codepoint);\n    let shouldJoin = width === 0 && preceding !== 0;\n    if (shouldJoin) {\n      const oldWidth = UnicodeService.extractWidth(preceding);\n      if (oldWidth === 0) {\n        shouldJoin = false;\n      } else if (oldWidth > width) {\n        width = oldWidth;\n      }\n    }\n    return UnicodeService.createPropertyValue(0, width, shouldJoin);\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens\n         * took very long). This cannot be solved here for the handler itself (it is the handlers\n         * responsibility to slice hard work), but we can at least schedule a screen update as we\n         * gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingJoinState: number; // UnicodeJoinProperties\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingJoinState = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing. This is a really bad\n           * condition with screwed up execution order and prolly messed up terminal state,\n           * therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that, as\n           * the pending async handler still might mess up the terminal later. Instead fix the\n           * faulty async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingJoinState = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingJoinState = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from '@xterm/xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from '@xterm/xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from '@xterm/xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from '@xterm/xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport class BufferNamespaceApi extends Disposable implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = this.register(new EventEmitter<IBufferApi>());\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    super();\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from '@xterm/xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from '@xterm/xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward\n    //       event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { clone } from 'common/Clone';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { IBufferService, ICoreService, ILogService, IOptionsService } from 'common/services/Services';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecoration, IDecorationOptions, IMarker } from '@xterm/xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => this.reset()));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public get isDisposed(): boolean { return this._isDisposed; }\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  trace: LogLevelEnum.TRACE,\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  private _logLevel: LogLevelEnum = LogLevelEnum.OFF;\n  public get logLevel(): LogLevelEnum { return this._logLevel; }\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n\n    // For trace logging, assume the latest created log service is valid\n    traceLogger = this;\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, (this._optionsService.options.logger ? '' : LOG_PREFIX) + message, ...optionalParams);\n  }\n\n  public trace(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.TRACE) {\n      this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.DEBUG) {\n      this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.INFO) {\n      this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.WARN) {\n      this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevelEnum.ERROR) {\n      this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, message, optionalParams);\n    }\n  }\n}\n\nlet traceLogger: ILogService;\nexport function setTraceLogger(logger: ILogService): void {\n  traceLogger = logger;\n}\n\n/**\n * A decorator that can be used to automatically log trace calls to the decorated function.\n */\nexport function traceCall(_target: any, key: string, descriptor: any): any {\n  if (typeof descriptor.value !== 'function') {\n    throw new Error('not supported');\n  }\n  const fnKey = 'value';\n  const fn = descriptor.value;\n  descriptor[fnKey] = function (...args: any[]) {\n    // Early exit\n    if (traceLogger.logLevel !== LogLevelEnum.TRACE) {\n      return fn.apply(this, args);\n    }\n\n    traceLogger.trace(`GlyphRenderer#${fn.name}(${args.map(e => JSON.stringify(e)).join(', ')})`);\n    const result = fn.apply(this, args);\n    traceLogger.trace(`GlyphRenderer#${fn.name} return`, result);\n    return result;\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { FontWeight, IOptionsService, ITerminalOptions } from 'common/services/Services';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  cursorInactiveStyle: 'outline',\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  documentOverride: null,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  ignoreBracketedPasteMode: false,\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  logger: null,\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  windowsPty: {},\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n\n    // Clear out options that could link outside xterm.js as they could easily cause an embedder\n    // memory leak\n    this.register(toDisposable(() => {\n      this.rawOptions.linkHandler = null;\n      this.rawOptions.documentOverride = null;\n    }));\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n      case 'windowsPty':\n        value = value ?? {};\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, CursorInactiveStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler, IWindowsPty, ILogger } from '@xterm/xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<TArgs extends any[]> = TArgs extends [] ? []\n  : TArgs extends [...infer TFirst, infer TLast] ? TLast extends IBrandedService ? GetLeadingNonServiceArgs<TFirst> : TArgs\n    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n  OFF = 5\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  readonly logLevel: LogLevelEnum;\n\n  trace(message: any, ...optionalParams: any[]): void;\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  cursorInactiveStyle?: CursorInactiveStyle;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  documentOverride?: any | null;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  ignoreBracketedPasteMode?: boolean;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  logger?: ILogger | null;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowsPty?: IWindowsPty;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\n/*\n * Width and Grapheme_Cluster_Break properties of a character as a bit mask.\n *\n * bit 0: shouldJoin - should combine with preceding character.\n * bit 1..2: wcwidth - see UnicodeCharWidth.\n * bit 3..31: class of character (currently only 4 bits are used).\n *   This is used to determined grapheme clustering - i.e. which codepoints\n *   are to be combined into a single compound character.\n *\n * Use the UnicodeService static function createPropertyValue to create a\n * UnicodeCharProperties; use extractShouldJoin, extractWidth, and\n * extractCharKind to extract the components.\n */\nexport type UnicodeCharProperties = number;\n\n/**\n * Width in columns of a character.\n * In a CJK context, \"half-width\" characters (such as Latin) are width 1,\n * while \"full-width\" characters (such as Kanji) are 2 columns wide.\n * Combining characters (such as accents) are width 0.\n */\nexport type UnicodeCharWidth = 0 | 1 | 2;\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): UnicodeCharWidth;\n  getStringCellWidth(s: string): number;\n  /**\n   * Return character width and type for grapheme clustering.\n   * If preceding != 0, it is the return code from the previous character;\n   * in that case the result specifies if the characters should be joined.\n   */\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): UnicodeCharWidth;\n  charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\nimport { IUnicodeService, IUnicodeVersionProvider, UnicodeCharProperties, UnicodeCharWidth } from 'common/services/Services';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  public static extractShouldJoin(value: UnicodeCharProperties): boolean {\n    return (value & 1) !== 0;\n  }\n  public static extractWidth(value: UnicodeCharProperties): UnicodeCharWidth {\n    return ((value >> 1) & 0x3) as UnicodeCharWidth;\n  }\n  public static extractCharKind(value: UnicodeCharProperties): number {\n    return value >> 3;\n  }\n  public static createPropertyValue(state: number, width: number, shouldJoin: boolean = false): UnicodeCharProperties {\n    return ((state & 0xffffff) << 3) | ((width & 3) << 1) | (shouldJoin?1:0);\n  }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): UnicodeCharWidth {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    let precedingInfo = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      const currentInfo = this.charProperties(code, precedingInfo);\n      let chWidth = UnicodeService.extractWidth(currentInfo);\n      if (UnicodeService.extractShouldJoin(currentInfo)) {\n        chWidth -= UnicodeService.extractWidth(precedingInfo);\n      }\n      result += chWidth;\n      precedingInfo = currentInfo;\n    }\n    return result;\n  }\n\n  public charProperties(codepoint: number, preceding: UnicodeCharProperties): UnicodeCharProperties {\n    return this._activeProvider.charProperties(codepoint, preceding);\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { IBufferNamespace as IBufferNamespaceApi, IDecoration, IDecorationOptions, IDisposable, ILinkProvider, ILocalizableStrings, IMarker, IModes, IParser, ITerminalAddon, Terminal as ITerminalApi, ITerminalInitOnlyOptions, IUnicodeHandling } from '@xterm/xterm';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal extends Disposable implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions & ITerminalInitOnlyOptions) {\n    super();\n\n    this._core = this.register(new TerminalCore(options));\n    this._addonManager = this.register(new AddonManager());\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = this.register(new BufferNamespaceApi(this._core));\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public input(data: string, wasUserInput: boolean = true): void {\n    this._core.input(data, wasUserInput);\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public attachCustomWheelEventHandler(customWheelEventHandler: (event: WheelEvent) => boolean): void {\n    this._core.attachCustomWheelEventHandler(customWheelEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.registerMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    super.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n"],"names":["root","factory","exports","module","define","amd","a","i","globalThis","AccessibilityManager","Disposable","constructor","_terminal","instantiationService","super","_coreBrowserService","_renderService","_rowColumns","WeakMap","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","this","_accessibilityContainer","mainDocument","createElement","classList","add","_rowContainer","setAttribute","_rowElements","rows","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_handleBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","length","_refreshRowsDimensions","_liveRegion","_liveRegionDebouncer","register","TimeBasedDebouncer","_renderRows","bind","element","Error","insertAdjacentElement","onResize","_handleResize","onRender","_refreshRows","start","end","onScroll","onA11yChar","char","_handleChar","onLineFeed","onA11yTab","spaceCount","_handleTab","onKey","_handleKey","key","onBlur","_clearLiveRegion","onDimensionsChange","addDisposableDomListener","document","_handleSelectionChange","onDprChange","toDisposable","remove","MAX_ROWS_TO_READ","shift","textContent","Strings","tooMuchOutput","keyChar","test","push","refresh","buffer","setSize","lines","toString","line","get","ydisp","columns","lineData","translateToString","undefined","posInSet","innerText","set","_announceCharacters","position","boundaryElement","target","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","removeEventListener","newElement","unshift","scrollLines","focus","preventDefault","stopImmediatePropagation","selection","getSelection","isCollapsed","contains","anchorNode","clearSelection","focusNode","console","error","begin","node","offset","anchorOffset","focusOffset","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_CONTAINED_BY","DOCUMENT_POSITION_FOLLOWING","childNodes","lastRowElement","slice","toRowColumn","rowElement","Text","parentNode","row","parseInt","isNaN","warn","column","cols","beginRowColumn","endRowColumn","select","children","tabIndex","_refreshRowDimensions","dimensions","css","cell","height","style","width","canvas","IInstantiationService","ICoreBrowserService","IRenderService","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","optionsService","decPrivateModes","rawOptions","ignoreBracketedPasteMode","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","_color","TwoKeyMap","_css","setCss","bg","fg","getCss","setColor","getColor","clear","type","handler","options","disposed","dispose","Linkifier","currentLink","_currentLink","_element","_mouseService","_bufferService","_linkProviderService","_linkCacheDisposables","_isMouseOut","_wasResized","_activeLine","_onShowLinkUnderline","EventEmitter","onShowLinkUnderline","event","_onHideLinkUnderline","onHideLinkUnderline","getDisposeArrayDisposable","_lastMouseEvent","_activeProviderReplies","_clearCurrentLink","_handleMouseMove","_handleMouseDown","_handleMouseUp","_positionFromMouseEvent","composedPath","_lastBufferCell","x","y","_handleHover","_askForLink","_linkAtPosition","link","useLineCache","forEach","reply","linkWithState","Map","linkProvided","linkProvider","linkProviders","entries","existingReply","_checkLinkProviderResult","provideLinks","links","linksWithState","map","size","_removeIntersectingLinks","replies","occupiedCells","Set","providerReply","startX","range","endX","has","splice","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","_mouseDownLink","activate","startRow","endRow","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","Object","defineProperties","v","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","fire","leave","lower","upper","current","mouseService","coords","getCoords","x1","y1","x2","y2","IMouseService","IBufferService","ILinkProviderService","promptLabel","OscLinkProvider","_optionsService","_oscLinkService","callback","result","linkHandler","CellData","lineLength","getTrimmedLength","currentLinkId","currentStart","finishLink","hasContent","loadCell","hasExtendedAttrs","extended","urlId","getLinkData","uri","ignoreLink","allowNonHttpProtocols","parsed","URL","includes","protocol","defaultActivate","confirm","newWindow","window","open","opener","location","href","IOptionsService","IOscLinkService","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","Math","min","_rowEnd","max","_runRefreshCallbacks","Terminal","CoreTerminal","onFocus","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","onWillOpen","_onWillOpen","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_accessibilityManager","MutableDisposable","_onCursorMove","onCursorMove","_onKey","_onRender","_onSelectionChange","onSelectionChange","_onTitleChange","onTitleChange","_onBell","onBell","_setup","_decorationService","_instantiationService","createInstance","DecorationService","setService","IDecorationService","LinkProviderService","registerLinkProvider","_inputHandler","onRequestBell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","_afterResize","_customKeyEventHandler","_themeService","req","acc","ident","colorRgb","color","toColorRGB","colors","ansi","C0","ESC","toRgbString","C1_ESCAPED","ST","modifyColors","channels","toColor","narrowedAcc","restoreColor","buffers","active","preventScroll","_handleScreenReaderModeOptionChange","_handleTextAreaFocus","sendFocus","_showCursor","blur","_handleTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","getWidth","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","hasSelection","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","parent","isConnected","_logService","debug","ownerDocument","defaultView","_document","documentOverride","Document","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","updateCursorStyle","_helperContainer","isChromeOS","CoreBrowserService","_charSizeService","CharSizeService","ICharSizeService","ThemeService","IThemeService","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","RenderService","resize","_compositionView","CompositionHelper","MouseService","linkifier","hasRenderer","setRenderer","_createRenderer","viewport","Viewport","onRequestScrollLines","amount","suppressScrollEvent","onRequestSyncScrollBar","syncScrollArea","handleCursorMove","handleResize","handleBlur","handleFocus","SelectionService","ISelectionService","onRequestRedraw","handleSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","handleMouseDown","coreMouseService","areMouseEventsActive","disable","enable","screenReaderMode","onSpecificOptionChange","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","measure","bindMouse","DomRenderer","self","el","sendEvent","getMouseReportCoords","but","action","overrideType","buttons","_customWheelEventHandler","getLinesScrolled","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","data","abs","handleWheel","handleTouchStart","handleTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","source","attachCustomKeyEventHandler","customKeyEventHandler","attachCustomWheelEventHandler","customWheelEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","registerMarker","cursorYOffset","addMarker","registerDecoration","decorationOptions","setSelection","getSelectionPosition","selectionStart","selectionEnd","selectAll","selectLines","shouldIgnoreComposition","isMac","macOptionIsMeta","keydown","scrollOnUserInput","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","toFixed","canvasHeight","GET_CELL_SIZE_PIXELS","force","cancelEvents","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","clearTimeout","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","setTimeout","_scrollArea","themeService","scrollBarWidth","_currentRowHeight","_currentDeviceCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","_smoothScrollState","startTime","origin","_onRequestScrollLines","offsetWidth","_handleScroll","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","_handleThemeChange","onChangeColors","backgroundColor","background","_refresh","immediate","device","dpr","offsetHeight","newBufferHeight","round","scrollTop","offsetParent","diff","_smoothScroll","_isDisposed","percent","_smoothScrollPercent","_clearSmoothScrollState","smoothScrollDuration","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","scrollHeight","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","getBufferElements","startLine","endLine","cursorElement","currentLine","bufferElements","isWrapped","div","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","_screenElement","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_doRefreshDecorations","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","layer","marker","display","onRenderEmitter","onDispose","delete","anchor","right","_zones","_zonePool","_zonePoolIndex","_linePadding","full","center","zones","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","zone","drawHeight","drawWidth","drawX","_width","_colorZoneStore","ColorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","parentElement","insertBefore","ctx","getContext","_ctx","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","normal","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","_refreshDrawConstants","outerWidth","innerWidth","ceil","pixelsPerLine","nonFullHeight","_refreshDecorations","clearRect","lineWidth","_renderColorZone","fillStyle","fillRect","updateCanvasDimensions","updateAnchor","_isComposing","_textarea","_coreService","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","currentCompositionPosition","input","substring","oldValue","newValue","DEL","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","elementStyle","getComputedStyle","leftPadding","getPropertyValue","topPadding","colCount","hasValidCharSize","cssCellWidth","cssCellHeight","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","startCol","endCol","forward","currentCol","bufferStr","translateBufferLineToString","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","SELECTION_CLASS","nextTerminalId","_linkifier2","_terminalClass","_selectionRenderModel","createSelectionRenderModel","_refreshRowElements","_selectionContainer","createRenderDimensions","_updateDimensions","onOptionChange","_handleOptionsChanged","_injectCss","_rowFactory","DomRendererRowFactory","_handleLinkHover","_handleLinkLeave","_widthCache","_themeStyleElement","_dimensionsStyleElement","WidthCache","setFont","fontWeight","fontWeightBold","_setDefaultSpacing","letterSpacing","overflow","styles","_terminalSelector","foreground","multiplyOpacity","cursor","cursorAccent","cursorWidth","selectionBackgroundOpaque","selectionInactiveBackgroundOpaque","c","INVERTED_DEFAULT_COLOR","opaque","spacing","defaultSpacing","handleDevicePixelRatioChange","handleCharSizeChanged","renderRows","replaceChildren","update","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","documentFragment","isXFlipped","_createSelectionElement","middleRowsCount","colStart","colEnd","cursorAbsoluteY","cursorBlink","cursorStyle","cursorInactiveStyle","createRow","_setCellUnderline","enabled","maxY","bufferline","_workCell","_columnSelectMode","_selectionStart","_selectionEnd","isCursorRow","widthCache","linkStart","linkEnd","elements","joinedRanges","getJoinedCharacters","charElement","getNoBgTrimmedLength","cellAmount","oldBg","oldFg","oldExt","oldLinkHover","oldSpacing","oldIsInSelection","classes","hasHover","isJoined","lastCharX","JoinedCellData","isInSelection","_isCellInSelection","isCursorCell","isLinkHover","isDecorated","forEachDecorationAtCell","d","chars","getChars","WHITESPACE_CELL_CHAR","isUnderline","isOverline","isBold","isItalic","selectionForeground","ext","isInvisible","isCursorHidden","isFocused","isDim","underlineStyle","isUnderlineColorDefault","isUnderlineColorRGB","textDecorationColor","AttributeData","getUnderlineColor","join","drawBoldTextInBrightColors","isStrikethrough","textDecoration","getFgColor","fgColorMode","getFgColorMode","getBgColor","bgColorMode","getBgColorMode","isInverse","temp","temp2","bgOverride","fgOverride","resolvedBg","isTop","backgroundColorRGB","rgba","foregroundColorRGB","_addStyle","padStart","_applyMinimumContrast","className","minimumContrastRatio","treatGlyphAsBackgroundColor","getCode","cache","_getContrastCache","adjustedColor","ratio","ensureContrastRatio","halfContrastCache","contrastCache","padChar","_flat","Float32Array","_font","_fontSize","_weight","_weightBold","_measureElements","whiteSpace","fontKerning","regular","bold","italic","fontStyle","boldItalic","_holey","fill","font","weight","weightBold","cp","_measure","variant","DIM_OPACITY","TEXT_BASELINE","isLegacyEdge","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","currentOffset","SelectionRenderModel","terminal","viewportY","isCellSelected","isSelectAllActive","selectionStartLength","finalSelectionStart","areSelectionValuesReversed","finalSelectionEnd","startPlusLength","handleTrim","_onCharSizeChange","onCharSizeChange","_measureStrategy","TextMetricsMeasureStrategy","DomMeasureStrategy","onMultipleOptionChange","BaseMeasureStategy","_result","_validateAndSet","_parentElement","_measureElement","Number","OffscreenCanvas","measureText","metrics","fontBoundingBoxAscent","fontBoundingBoxDescent","firstCell","content","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","id","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","getFg","rangeAttrBG","getBg","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","_window","_isFocused","_cachedIsFocused","_screenDprMonitor","ScreenDprMonitor","_onDprChange","_onWindowChange","onWindowChange","w","setWindow","devicePixelRatio","hasFocus","queueMicrotask","_parentWindow","_windowResizeListener","_outerListener","_setDprAndFireIfDiffers","_currentDevicePixelRatio","_updateDpr","_setWindowResizeListener","clearListener","parentWindow","_resolutionMediaMatchList","removeListener","matchMedia","addListener","providerIndex","indexOf","_renderer","decorationService","coreBrowserService","_pausedResizeTask","DebouncedIdleTask","_observerDisposable","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","onRefreshRequest","_renderDebouncer","RenderDebouncer","_fullRefresh","_registerIntersectionObserver","observer","IntersectionObserver","_handleIntersectionChange","threshold","observe","disconnect","entry","isIntersecting","intersectionRatio","flush","isRedrawOnly","_fireOnCanvasResize","renderer","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","RegExp","_linkifier","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_mouseUpListener","onUserInput","_trimListener","onTrim","_handleTrim","_handleBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","lineText","startRowEndCol","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_handleIncrementalClick","detail","_handleSingleClick","_handleDoubleClick","_handleTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","setInterval","_dragScroll","clearInterval","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","altClickMovesCursor","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","getCodePoint","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","first","last","createDecorator","DEFAULT_FOREGROUND","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","DEFAULT_ANSI_COLORS","freeze","r","g","b","toCss","toRgba","_colors","_contrastCache","ColorContrastCache","_halfContrastCache","_onChangeColors","selectionBackgroundTransparent","blend","selectionInactiveBackgroundTransparent","_updateRestoreColors","_setTheme","theme","parseColor","selectionBackground","selectionInactiveBackground","NULL_COLOR","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","extendedAnsi","colorCount","slot","_restoreColor","_restoreColors","cssString","fallback","CircularList","_maxLength","onDeleteEmitter","onDelete","onInsertEmitter","onInsert","onTrimEmitter","_array","Array","_startIndex","_length","maxLength","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","isFull","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","clone","val","depth","clonedObject","isArray","$r","$g","$b","$a","rgb","toPaddedHex","s","contrastRatio","l1","l2","toChannels","fgR","fgG","fgB","bgR","bgG","bgB","rgbaColor","factor","$ctx","$litmusColor","isNode","willReadFrequently","globalCompositeOperation","createLinearGradient","match","rgbaMatch","parseFloat","getImageData","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","bgRgba","fgRgba","cr","increaseLuminance","bgL","fgL","resultA","resultARatio","resultB","hasWriteSyncWarnHappened","_onScrollApi","_windowsWrappingHeuristics","_onBinary","onBinary","_onData","onData","_onLineFeed","_onResize","_onWriteParsed","onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","ILogService","CoreService","CoreMouseService","ICoreMouseService","unicodeService","UnicodeService","IUnicodeService","_charsetService","CharsetService","ICharsetService","OscLinkService","InputHandler","onRequestScrollToBottom","_writeBuffer","handleUserInput","_handleWindowsPtyOptionChange","markRangeDirty","scrollBottom","WriteBuffer","promiseResult","parse","write","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","wasUserInput","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","scrollPages","pageCount","scrollToTop","scrollToLine","scrollAmount","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsPty","buildNumber","backend","windowsMode","_enableWindowsWrappingHeuristics","disposables","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","listener","arg1","arg2","queue","call","clearListeners","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","$temp","getAttrData","_curAttrData","_coreMouseService","_unicodeService","_parser","EscapeSequenceParser","_parseBuffer","Uint32Array","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","_dirtyRowTracker","DirtyRowTracker","setCsiHandlerFallback","params","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","code","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","selectProtected","requestMode","setExecuteHandler","BEL","bell","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","nextLine","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setHyperlink","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","CHARSETS","selectCharset","screenAlignmentPattern","setErrorHandler","DcsHandler","requestStatusString","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","_getCurrentLinkId","wasPaused","DEBUG","prototype","split","clearRange","len","decode","subarray","viewportEnd","viewportStart","chWidth","charset","wraparoundMode","wraparound","insertMode","modes","curAttr","bufferRow","markDirty","setCellFromCodepoint","precedingJoinState","ch","currentInfo","charProperties","extractWidth","shouldJoin","extractShouldJoin","oldWidth","stringFromCodePoint","addLineToLink","oldRow","oldCol","_eraseAttrData","BufferLine","copyCellsFrom","addCodepointToCell","delta","insertCells","getNullCell","NULL_CELL_CODE","NULL_CELL_WIDTH","convertEol","reverseWraparound","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","respectProtect","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","joinState","idata","itext","codePointAt","tlength","copyWithin","_is","term","termName","setgCharset","DEFAULT_CHARSET","applicationKeypad","activeEncoding","activateAltBuffer","activateNormalBuffer","dm","mouseProtocol","mouseEncoding","cs","b2v","m","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","attr","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","updateExtended","_processSGR0","l","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","idx","spec","exec","isValidColorIndex","args","_createHyperlink","_finishHyperlink","parsedParams","idParamIndex","findIndex","startsWith","registerLink","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","yOffset","markAllDirty","f","isProtected","_disposables","unregister","_value","array","_data","third","fourth","process","userAgent","navigator","platform","isSafari","majorVersion","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","forEachByKey","values","mid","midKey","TaskQueue","_tasks","_i","enqueue","task","_start","_idleCallback","_cancelCallback","_requestCallback","_process","deadline","taskDuration","longestTask","lastDeadlineRemaining","timeRemaining","deadlineRemaining","PriorityTaskQueue","_createDeadline","duration","IdleTaskQueue","requestIdleCallback","cancelIdleCallback","_queue","lastChar","CHAR_DATA_CODE_INDEX","WHITESPACE_CELL_CODE","ExtendedAttrs","newObj","isBlink","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","isAttributeDefault","isEmpty","getUnderlineColorMode","isUnderlineColorPalette","getUnderlineStyle","getUnderlineVariantOffset","underlineVariantOffset","_urlId","_ext","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_memoryCleanupQueue","_memoryCleanupPosition","_cols","_rows","_getCorrectBufferLength","setupTabStops","getWhitespaceCell","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","dirtyMemoryLines","addToY","amountToTrim","_isReflowEnabled","_reflow","_batchedMemoryCleanup","normalRun","counted","cleanupMemory","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","lineIndex","trimRight","tabStopWidth","Marker","_removeMarker","$startIndex","fillCellData","_combined","_extendedAttrs","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","codePoint","attrs","byteLength","uint32Cells","keys","extKeys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","outColumns","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","BufferSet","_onBufferActivate","_normal","Buffer","_alt","inactiveBuffer","obj","combined","DEFAULT_COLOR","DEFAULT_ATTR","DEFAULT_EXT","_id","isDisposed","_nextId","_onDispose","disposable","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","toLowerCase","_interim","startPos","interim","Uint8Array","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","BMP_COMBINING","HIGH_COMBINING","table","version","wcwidth","num","ucs","bisearch","preceding","createPropertyValue","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","_didUserInput","chunk","cb","_innerWrite","lastTime","continuation","resolve","then","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","unhook","hook","put","utf32ToString","success","handlerResult","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","TransitionTable","setDefault","next","addMany","codes","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","DcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_state","_put","MAX_VALUE","fromArray","k","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","newParams","getSubParamsAll","store","cur","_addons","instance","loadAddon","loadedAddon","_wrappedAddonDispose","_buffer","init","baseY","getLine","BufferLineApiView","_line","getCell","startColumn","endColumn","BufferNamespaceApi","_core","_onBufferChange","onBufferChange","BufferApiView","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","oldYdisp","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","SGR_PIXELS","_protocols","_encodings","_activeProtocol","_activeEncoding","_lastEvent","_onProtocolChange","name","addProtocol","addEncoding","encoding","_equalEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","pixels","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_onRequestScrollToBottom","disableStdin","$xmin","$xmax","_decorations","SortedList","_onDecorationRegistered","_onDecorationRemoved","Decoration","markerDispose","getDecorationsAtCell","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","ServiceCollection","_entries","service","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","trace","TRACE","info","INFO","ERROR","off","OFF","traceLogger","_logLevel","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","logger","log","_target","descriptor","fn","JSON","stringify","DEFAULT_OPTIONS","customGlyphs","allowProposedApi","allowTransparency","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","_sanitizeAndValidateOption","_setupOptions","eventKey","getter","propName","setter","desc","defineProperty","isCursorStyle","_entriesWithId","_dataByLinkId","_removeMarkerFromLink","castData","_getEntryIdKey","linkId","every","linkData","DI_TARGET","DI_DEPENDENCIES","serviceRegistry","decorator","arguments","storeServiceDependency","extractCharKind","_providers","_onChange","onChange","defaultProvider","UnicodeV6","_activeProvider","getStringCellWidth","precedingInfo","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","_checkReadonlyOptions","_checkProposedApi","parser","ParserApi","unicode","UnicodeApi","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","originMode","reverseWraparoundMode","sendFocusMode","_verifyIntegers","_verifyPositiveIntegers","writeln","addon","strings","Infinity"],"sourceRoot":""}